name: Tag Version

on:
  push:
    branches: ["main"]
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/tag.yml"
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

concurrency:
  group: tag
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install jq
      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true
          architecture: x64
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check for version change
        run: |
          go run . version
          current=v$(go run . version)
          tags=$(curl https://api.github.com/repos/Frank-Mayer/yab/tags)
          latest=$(echo $tags | jq -r '.[0].name')
          if [ "$current" = "$latest" ]; then
            echo "No version change detected. Exiting."
            exit 1
          fi
          echo "Version change detected. Tagging. $latest -> $current"

  test-mac:
    needs:
      - check
    runs-on: macos-latest
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true
          architecture: x64
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        run: go test ./... -v

  test-win:
    needs:
      - check
    runs-on: windows-latest
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true
          architecture: x64
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        run: go test ./... -v

  tag:
    needs:
      - test-win
      - test-mac
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true
          architecture: x64
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check for version change
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          echo "setup git complete"
          go run . version
          current=v$(go run . version)
          git tag -a $current -m "Release $current"
          git push
          git push --tags
